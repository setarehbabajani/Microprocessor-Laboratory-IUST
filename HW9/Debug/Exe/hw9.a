;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : HW9
;Version :
;Date    : 12/16/2023
;Author  : setareh babajani
;Company : IUST
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 1.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <stdio.h>
;
;void usart_send_string(char *str);
;unsigned char i;
;void main(void)
; 0000 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001F     unsigned char a, counter=0;
; 0000 0020     UCSRA=0x00;
;	a -> R17
;	counter -> R16
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0021     UCSRB=0x18;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0022     UCSRC=0x86;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0023     UBRRH=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0024     UBRRL=0x33;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0025 
; 0000 0026     lcd_init(16);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0027 
; 0000 0028     while (1)
;PCODE: $0000001C VOL: 0
; 0000 0029       {
; 0000 002A         a = getchar();
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002B         lcd_putchar(a);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002C         putchar(a);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 002D         if(a == 'C')
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 002E         {
; 0000 002F             lcd_clear();
;PCODE: $00000026 VOL: 0
; 0000 0030             putchar(0x0D);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0031             putchar(0x0A);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0032         }
; 0000 0033         else if(a == 'c')
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0034         {
; 0000 0035             for(counter =0; counter < 24; counter++)
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0036             {
; 0000 0037                 putchar(0x0D);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0038                 putchar(0x0A);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0039             }
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 003A         }
; 0000 003B         else if(a == 'N')
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 003C         {
; 0000 003D             putchar(0x0D);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 003E             putchar(0x0A);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 003F             usart_send_string("Setareh Babajani");
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0040             putchar(0x0D);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0041             putchar(0x0A);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0042 
; 0000 0043         }
; 0000 0044         else if(a == 'M')
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0045         {
; 0000 0046 
; 0000 0047             putchar(0x0D);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0048             putchar(0x0A);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0049             lcd_clear();
;PCODE: $0000005B VOL: 0
; 0000 004A             lcd_gotoxy(5,0);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 004B             lcd_puts("Setareh");
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 004C             lcd_gotoxy(0,1);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 004D             lcd_puts("Babajani");
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004E         }
; 0000 004F 
; 0000 0050       }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0051 }
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0

	.DSEG
_0xE:
	.BYTE 0x22
;void usart_send_string(char *str)
; 0000 0053 {

	.CSEG
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0054     for(i=0;str[i];i++)
;PCODE: $00000075 VOL: 0
;	*str -> Y+0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0055     putchar(str[i]);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0056 }
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;
